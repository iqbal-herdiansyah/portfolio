{
  "profile": {
    "location": {
      "country": "Indonesia",
      "province": "West Java",
      "city": "Bandung"
    },
    "about": "I started my career as a Teaching Assistant in web development. I helped students learn the basics of HTML, CSS, and JavaScript. This job helped me get better at technical skills, communication, and solving problems. Now, I work as a Frontend Web Developer. I make modern and responsive websites that are easy to use and look good.",
    "superiority": {
      "years_of_experience": "Years Of Experience",
      "projects_completed": "Projects Completed"
    }
  },

  "words": {
    "options": "Options",
    "lets_talk": "Let's Talk",
    "recent_projects": "Recent\nProjects",
    "my_work": "My Work",
    "years_of_experience": "Years Of\nExperience",
    "programming_skills": "Programming\nSkills",
    "what_clients_say": "What Clients Say About\nMy Work",
    "lets_create_something_amazing": "Let’s Create\nSomething Amazing",
    "dark_mode": "Dark Mode",
    "light_mode": "Light Mode"
  },

  "nav_items": {
    "home": "Home",
    "recent_projects": "Recent Projects",
    "experience": "Experience",
    "skills": "Skills",
    "client_comments": "Client Comments",
    "lets_talk": "Let’s Talk"
  },

  "toast": {
    "send_message": {
      "title": {
        "success": "Message Sent",
        "failed": "Delivery Failed"
      },
      "description": {
        "success": "Thank you, your message has been sent successfully.",
        "failed": "Sorry, something went wrong while sending your message. Please try again."
      }
    }
  },

  "form": {
    "name": {
      "model": "name",
      "label": "Name",
      "placeholder": "Your name",
      "required": "Name is required."
    },
    "email": {
      "model": "email",
      "label": "Email",
      "placeholder": "Your email",
      "required": "Email is required.",
      "not_valid": "Email is not valid."
    },
    "message": {
      "model": "message",
      "label": "Message",
      "placeholder": "Your message",
      "required": "Message is required."
    },
    "action": {
      "send": "Send"
    }
  },

  "zodI18n": {
    "errors": {
      "custom": "Invalid input",
      "invalid_arguments": "Invalid function arguments",
      "invalid_date": "Invalid date",
      "invalid_enum_value": "Invalid enum value. Expected {options}, received '{received}'",
      "invalid_intersection_types": "Intersection results could not be merged",
      "invalid_literal": "Invalid literal value, expected {expected}",
      "invalid_return_type": "Invalid function return type",
      "invalid_string": {
        "cuid": "Invalid {validation}",
        "datetime": "Invalid {validation}",
        "email": "Invalid {validation}",
        "endsWith": "Invalid input: must end with \"{endsWith}\"",
        "regex": "Invalid",
        "startsWith": "Invalid input: must start with \"{startsWith}\"",
        "url": "Invalid {validation}",
        "uuid": "Invalid {validation}"
      },
      "invalid_type": "Expected {expected}, received {received}",
      "invalid_type_received_undefined": "Required",
      "invalid_union": "Invalid input",
      "invalid_union_discriminator": "Invalid discriminator value. Expected {options}",
      "not_finite": "Number must be finite",
      "not_multiple_of": "Number must be a multiple of {multipleOf}",
      "required": "Required",
      "too_big": {
        "array": {
          "exact": "Array must contain exactly {maximum} element(s)",
          "inclusive": "Array must contain at most {maximum} element(s)",
          "not_inclusive": "Array must contain less than {maximum} element(s)"
        },
        "date": {
          "exact": "Date must be exactly {maximum}",
          "inclusive": "Date must be smaller than or equal to {maximum}",
          "not_inclusive": "Date must be smaller than {maximum}"
        },
        "number": {
          "exact": "Number must be exactly {maximum}",
          "inclusive": "Number must be less than or equal to {maximum}",
          "not_inclusive": "Number must be less than {maximum}"
        },
        "set": {
          "exact": "Invalid input",
          "inclusive": "Invalid input",
          "not_inclusive": "Invalid input"
        },
        "string": {
          "exact": "String must contain exactly {maximum} character(s)",
          "inclusive": "String must contain at most {maximum} character(s)",
          "not_inclusive": "String must contain under {maximum} character(s)"
        }
      },
      "too_small": {
        "array": {
          "exact": "Array must contain exactly {minimum} element(s)",
          "inclusive": "Array must contain at least {minimum} element(s)",
          "not_inclusive": "Array must contain more than {minimum} element(s)"
        },
        "date": {
          "exact": "Date must be exactly {minimum}",
          "inclusive": "Date must be greater than or equal to {minimum}",
          "not_inclusive": "Date must be greater than {minimum}"
        },
        "number": {
          "exact": "Number must be exactly {minimum}",
          "inclusive": "Number must be greater than or equal to {minimum}",
          "not_inclusive": "Number must be greater than {minimum}"
        },
        "set": {
          "exact": "Invalid input",
          "inclusive": "Invalid input",
          "not_inclusive": "Invalid input"
        },
        "string": {
          "exact": "String must contain exactly {minimum} character(s)",
          "inclusive": "String must contain at least {minimum} character(s)",
          "not_inclusive": "String must contain over {minimum} character(s)"
        }
      },
      "unrecognized_keys": "Unrecognized key(s) in object: {keys}"
    },
    "types": {
      "array": "array",
      "bigint": "bigint",
      "boolean": "boolean",
      "date": "date",
      "float": "float",
      "function": "function",
      "integer": "integer",
      "map": "map",
      "nan": "nan",
      "never": "never",
      "null": "null",
      "number": "number",
      "object": "object",
      "promise": "promise",
      "set": "set",
      "string": "string",
      "symbol": "symbol",
      "undefined": "undefined",
      "unknown": "unknown",
      "void": "void"
    },
    "validations": {
      "cuid": "cuid",
      "datetime": "datetime",
      "email": "email",
      "regex": "regex",
      "url": "url",
      "uuid": "uuid"
    }
  }
}
